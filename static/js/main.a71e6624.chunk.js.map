{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","ImageApiService.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","ImageGalleryItem","id","webimg","onClick","largeimg","onImgClick","className","styles","src","alt","data-source","ImageGalleryItemImage","Button","onButtonClick","protoTypes","PropTypes","func","api","fetchImage","nextName","actualPage","fetch","then","response","ok","json","Promise","reject","Error","Modal","handleEsc","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","Overlay","Component","ImageGallery","state","images","error","status","hits","page","showModal","moreImages","console","log","fetchAPI","imageTag","setState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","toggleModal","handleImgClick","actImage","dataset","source","nodeName","prevProps","prevState","prevName","type","color","height","width","timeout","message","length","map","webformatURL","largeImageURL","defaultProps","imagesTag","Searchbar","handleTagChange","evt","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","toast","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","App","handleFormSubmit","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a71e6624.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1Rz2y\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3Vvim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1amVK\",\"Modal\":\"Modal_Modal__J8MbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3-8Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Rie3\"};","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css'\r\n\r\nconst ImageGalleryItem = ({ id, webimg, onClick, largeimg, onImgClick }) =>(\r\n  <li className={styles.ImageGalleryItem}\r\n      onClick={onClick}>\r\n    <img \r\n      src={webimg} \r\n      alt={id} \r\n      data-source={largeimg}\r\n      className={styles.ImageGalleryItemImage}\r\n      onClick={onImgClick}\r\n    />\r\n  </li>\r\n)\r\n\r\nImageGalleryItem.propTypes={\r\n  onClick: PropTypes.func,\r\n  onImgClick: PropTypes.func,\r\n  id:  PropTypes.number,\r\n  webimg: PropTypes.string,\r\n  largeimg: PropTypes.string,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Button.module.css'\r\n\r\nfunction Button ({onButtonClick}){\r\n    return (\r\n        <button\r\n            className={styles.Button}\r\n            onClick={onButtonClick}>\r\n            More...\r\n        </button>              \r\n    )\r\n}\r\n\r\nButton.protoTypes={\r\n    onButtonClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n    \r\n","function fetchImage(nextName, actualPage){\r\n    const MY_KEY = '19192524-a42a2a32afb109ad508e945f7'\r\n    const BASE_URL = 'https://pixabay.com/api'\r\n    const perPage = 12;\r\n    return fetch(`${BASE_URL}/?q=${nextName}&page=${actualPage}&key=${MY_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`)\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        return Promise.reject(\r\n            new Error(`Нет такого ${nextName}`)\r\n        );\r\n    })\r\n}\r\nconst api = {\r\n    fetchImage,\r\n}\r\n\r\nexport default api;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from '../Modal/Modal.module.css'\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('keydown', this.handleEsc)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('keydown', this.handleEsc)\r\n    }\r\n\r\n    handleEsc = e =>{\r\n        if (e.code === 'Escape'){\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = event => {\r\n        if(event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className={styles.Overlay}\r\n                onClick={this.handleBackdropClick}\r\n            >\r\n              <div className={styles.Modal}>\r\n                <img \r\n                    src={this.props.largeimg} \r\n                    // \r\n                    alt=\"\" \r\n                    className=\"\"/>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes={\r\n    onClose: PropTypes.func,\r\n    onImgClick: PropTypes.func,\r\n    largeimg: PropTypes.string,\r\n}\r\n\r\nexport default Modal\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport styles from './ImageGallery.module.css'\r\nimport Button from '../Button/Button';\r\nimport fetchAPI from '../../ImageApiService';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default class ImageGallery extends Component {\r\n      state ={\r\n        images: null,\r\n        error: null,\r\n        status: 'idle',\r\n        hits: [],\r\n        page: 1,\r\n        showModal: false,\r\n        largeimg: null,\r\n    }\r\n      componentDidUpdate(prevProps, prevState){\r\n        const prevName = prevProps.imageTag;\r\n        const nextName = this.props.imageTag;\r\n        const actualPage = this.state.page;\r\n        console.log(this.state);\r\n\r\n        if(prevName !== nextName){\r\n          this.setState({status: 'pending'});\r\n\r\n          fetchAPI.fetchImage(nextName,actualPage)\r\n          .then(images => this.setState({images, hits: images.hits, page: actualPage+1, status: 'resolved'}))\r\n          .catch(error => this.setState({error, status: 'resjected'}))\r\n        }\r\n      }\r\n\r\n          moreImages = () =>{            \r\n            const {page, hits} = this.state;\r\n            const actualPage = page + 1;\r\n            console.log(this.state);\r\n\r\n            function scrollDown () {\r\n              window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n              });\r\n            }\r\n\r\n            fetchAPI.fetchImage(this.props.imageTag, actualPage)\r\n            .then(images => this.setState({images, page: actualPage, hits:[...hits,...images.hits]}))\r\n            .then(()=>scrollDown())\r\n            .catch(error => this.setState({error, status: 'resjected'}))           \r\n          }\r\n\r\n          toggleModal = () => {\r\n            this.setState(({showModal}) =>({\r\n              showModal: !showModal\r\n            }));\r\n          }\r\n\r\n          handleImgClick = event => {\r\n            const actImage = event.target.dataset.source;\r\n            if(event.target.nodeName === 'IMG') {\r\n                this.setState(({largeimg}) =>({\r\n                  largeimg : actImage,\r\n                }))\r\n            }\r\n            console.log(this.state.largeimg); \r\n          }\r\n\r\n  render() {\r\n    const {error, status, hits, showModal, largeimg} = this.state;\r\n\r\n    if(status === 'idle') {\r\n      return <div>Введите, что искать</div>\r\n    }\r\n\r\n    if(status === 'pending') {\r\n      return (\r\n        <div>\r\n            Загружаем...\r\n            <Loader\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if(status === 'rejected') {\r\n      return <h1>{error.message}</h1>\r\n    }\r\n\r\n    if(status === 'resolved') {\r\n      return  (\r\n        <div>\r\n          <ul className={styles.ImageGallery}>\r\n            {hits.length === 0\r\n              ? 'Ничего не найдено'\r\n              : hits.map(({id, webformatURL, largeImageURL}) =>(\r\n              <ImageGalleryItem \r\n                key = {id}\r\n                webimg = {webformatURL}     \r\n                largeimg = {largeImageURL}  \r\n                onClick = {this.toggleModal}  \r\n                onImgClick={this.handleImgClick}       \r\n              />\r\n            ))\r\n            }\r\n          </ul>\r\n          {hits.length > 0 && <Button \r\n            onButtonClick={this.moreImages}\r\n          />}\r\n          {showModal &&  \r\n            <Modal \r\n              onClose={this.toggleModal}\r\n              largeimg={largeimg}\r\n              onImgClick={this.handleImgClick}>\r\n            </Modal>}\r\n        </div>\r\n      )\r\n    }  \r\n  }\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n  imagesTag: '',\r\n  images: null,\r\n  error: null,\r\n  status: 'idle',\r\n  hits: [],\r\n  page: 1,\r\n  showModal: false,\r\n  largeimg: null,\r\n}\r\n\r\nImageGallery.propTypes={\r\n  imageTag: PropTypes.string,\r\n  images: PropTypes.array,\r\n  error: PropTypes.string,\r\n  status: PropTypes.string,\r\n  hits: PropTypes.array,\r\n  page:  PropTypes.number,\r\n  showModal: PropTypes.bool,\r\n  largeimg: PropTypes.string,\r\n}\r\n","import React, { Component } from 'react'\r\nimport styles from './Searchbar.module.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Searchbar extends Component {\r\n  state ={\r\n    imageTag: '',  \r\n  }\r\n\r\n  handleTagChange = evt => {\r\n    this.setState({ imageTag: evt.currentTarget.value.toLowerCase()\r\n    })\r\n  }\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    if(this.state.imageTag.trim() === ''){\r\n      toast('Enter some word!')\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageTag);\r\n    this.setState({imageTag: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form \r\n          className={styles.SearchForm}\r\n          onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageTag}\r\n            onChange={this.handleTagChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nSearchbar.propTypes={\r\n  onSubmit: PropTypes.func,\r\n}","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    imagesTag: '',\r\n  }\r\n\r\n  handleFormSubmit = imageTag =>{\r\n    this.setState({imageTag})\r\n    console.log(imageTag);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        <ImageGallery \r\n          imageTag={this.state.imageTag}\r\n        />\r\n        <ToastContainer autoClose={2500}/>\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes={\r\n  imageTag: PropTypes.string,\r\n}\r\n\r\nApp.defaultProps = {\r\n  imagesTag: '',\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import styles from './index.module.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1fpJq\",\"SearchForm\":\"Searchbar_SearchForm__10uPd\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1MxZU\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Olsd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2okAh\"};"],"sourceRoot":""}